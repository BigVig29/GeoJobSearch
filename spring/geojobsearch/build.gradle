plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'pmd'
	id 'jacoco'
}

group = 'dev.algorise'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

jacoco {
    toolVersion = "0.8.11"
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'javax.persistence:javax.persistence-api:2.2'
	implementation 'com.mysql:mysql-connector-j'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.9' // Or use the latest version
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'junit:junit:4.12'
	testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'
	testImplementation 'org.testcontainers:postgresql:1.15.3'
    implementation 'org.postgresql:postgresql:42.2.5'


//    testImplementation(platform("org.junit:junit-bom:5.10.2"))
}


tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('compileTestJava') {
	options.compilerArgs << "-Xlint:deprecation"
}

task integrationtest(type : Test){
	filter{
		includeTestsMatching "*Integration*"
	}
	useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

}

pmd {
    toolVersion = '6.37.0'
    ignoreFailures = false
    ruleSets = ['java-basic', 'java-unusedcode']
}
